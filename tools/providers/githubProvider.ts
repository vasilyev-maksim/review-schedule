// tslint:disable:no-console

import axios from 'axios';

import { Provider } from '../../src/enums';
import { IReviewer } from '../../src/models';
import { isSubstring } from '../utils';
import { IProvider } from './models';

const token = 'ecbbd561d0b52b95762492f29d64ad5e9447c238';
const url = `https://api.github.com/orgs/PB-Digital/members`;

class GithubProvider implements IProvider<IGithubUser> {
    public getUserName (user: IGithubUser): string {
        return user.login;
    }

    public getProviderName (): Provider {
        return Provider.GitHub;
    }

    public findUserByName (query: string, list: IGithubUser[]): IGithubUser | null {
        return list.find((user) => user && isSubstring(user.login, query)) || null;
    }

    public async getAllUsers (): Promise<IGithubUser[]> {
        return (await axios.get<IGithubUser[]>(
            url,
            { headers: { Authorization: `token ${token}` } }
        )).data;
    }

    public convertToReviewer (user: IGithubUser): Partial<IReviewer> {
        return {
            githubId: user.id.toString(),
            githubUsername: user.login,
            photo: user.avatar_url,
        };
    }
}

export const githubProvider = new GithubProvider();

/**
 * Following interfaces were generated by the extension for VS Code:
 * https://marketplace.visualstudio.com/items?itemName=mariusalchimavicius.json-to-ts
 */

interface IGithubUser {
    login: string;
    id: number;
    node_id: string;
    avatar_url: string;
    gravatar_id: string;
    url: string;
    html_url: string;
    followers_url: string;
    following_url: string;
    gists_url: string;
    starred_url: string;
    subscriptions_url: string;
    organizations_url: string;
    repos_url: string;
    events_url: string;
    received_events_url: string;
    type: string;
    site_admin: boolean;
}
