// tslint:disable:no-console

import axios from 'axios';

import { Provider } from '../../src/enums';
import { IReviewer } from '../../src/models';
import { IProvider } from './models';

const token = 'ecbbd561d0b52b95762492f29d64ad5e9447c238';
const url = `https://api.github.com/orgs/PB-Digital/members`;

class GithubProvider implements IProvider {
    public getProviderName (): Provider {
        return Provider.GitHub;
    }

    public async getAllReviewers (): Promise<Partial<IReviewer>[]> {
        const githubUsers = (await axios.get<IGithubUser[]>(
            url,
            { headers: { Authorization: `token ${token}` } }
        )).data;

        const reviewers: Partial<IReviewer>[] = githubUsers
            .map((user) => {
                const reviewer: Partial<IReviewer> = {
                    githubId: user.id.toString(),
                    githubUsername: user.login,
                    photo: user.avatar_url,
                };
                return reviewer;
            });

        return reviewers;
    }

    public async findReviewers (names: string[]): Promise<Partial<IReviewer>[]> {
        const allReviewers = await this.getAllReviewers();
        const filteredReviewers = allReviewers
            .filter((user) => {
                return names.some((name) => {
                    return Boolean(
                        name
                        && user
                        && user.githubUsername
                        && user.githubUsername.toLowerCase().indexOf(name.toLowerCase()) > -1
                    );
                });
            });

        return filteredReviewers;
    }
}

export const githubProvider = new GithubProvider();

/**
 * Following interfaces were generated by the extension for VS Code:
 * https://marketplace.visualstudio.com/items?itemName=mariusalchimavicius.json-to-ts
 */

interface IGithubUser {
    login: string;
    id: number;
    node_id: string;
    avatar_url: string;
    gravatar_id: string;
    url: string;
    html_url: string;
    followers_url: string;
    following_url: string;
    gists_url: string;
    starred_url: string;
    subscriptions_url: string;
    organizations_url: string;
    repos_url: string;
    events_url: string;
    received_events_url: string;
    type: string;
    site_admin: boolean;
}
